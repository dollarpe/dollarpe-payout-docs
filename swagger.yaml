---
swagger: '2.0'
info:
  title: DollarPe Payout API
  description: "Welcome to our API documentation!\n\nThis API provides access to real-time cryptocurrency price feeds. Here's how to get started:\n\n1. Authentication:\n- Obtain your API key from the developer portal.\n- Include the API key & APP Secret in the header of each request: X-API-Key: <your_api_key>\n\n2. Base URL:\nAll API requests should be made to: https://api.example.com/v1/\n\n3. Rate Limiting:\n- Free tier: 100 requests per hour\n- Pro tier: 1000 requests per hour\n\n4. Available Endpoints:\n- GET /latest-price-feed: Retrieve the latest prices for all currency pairs\n- GET /historical-price/{pair}: Retrieve historical prices for a specific pair\n\n5. Response Format:\nAll responses are returned in JSON format.\n\n6. Error Handling:\n- 400: Bad Request\n- 401: Unauthorized\n- 403: Forbidden\n- 404: Not Found\n- 429: Too Many Requests\n- 500: Internal Server Error\n\nFor more detailed information on each endpoint, please refer to the specific API documentation below." 
  termsOfService: 'https://www.google.com/policies/terms/'
  contact:
    email: apoorv@dollarpe.com
  license:
    name: BSD License
  version: v1
schemes:
  - http
basePath: /payout/api
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Basic:
    type: basic
security:
  - Basic: []
paths:
  /get-latest-price-feed-docs:
    get:
      operationId: get-latest-price-feed-docs_list
      summary: Get the latest price feed
      description: >-
        Get the latest price feed for all available currency pairs. 


        **Example cURL Command:**


        ```bash

        curl -X GET "http://your-api-url/payout/api/get-latest-price-feed" -H
        "accept: application/json"

        ```
      parameters:
        - name: Api-Key
          in: header
          description: API key for authorization
          required: true
          type: string
        - name: App-Secret
          in: header
          description: APP secret for authorization
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: array
            items:
              type: object
              properties:
                pair:
                  description: Currency pair in format BASE-QUOTE
                  type: string
                dollarpe_rate:
                  description: CoinDCX weighted average rate in USD
                  type: number
          examples:
            application/json:
              status: true
              price_feeds:
                - pair: "BTC-USD"
                  buckets:
                    - upto: "2024-07-31T00:00:00Z"
                      price: 29000.50
                      price_feed_guid: "feed-guid-1234"
                    - upto: "2024-07-31T01:00:00Z"
                      price: 29100.75
                      price_feed_guid: "feed-guid-5678"
                - pair: "ETH-USD"
                  buckets:
                    - upto: "2024-07-31T00:00:00Z"
                      price: 1800.30
                      price_feed_guid: "feed-guid-91011"
                    - upto: "2024-07-31T01:00:00Z"
                      price: 1820.25
                      price_feed_guid: "feed-guid-12131"
        '500':
          description: Internal server error
          schema:
            type: object
            properties:
              status_code:
                type: integer
              detail:
                type: string
      tags:
        - Open APIs
    parameters: []
  /get-order-history-docs:
    get:
      operationId: get-order-history-docs_list
      summary: Get order history
      description: >-
        Retrieve the order history with pagination support.


        **Example cURL Command:**


        ```bash

        curl -X GET
        "http://your-api-url/Reference'],/api/get-order-history/?page=1&limit=20"
        -H "accept: application/json"

        ```
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          type: integer
          default: 1
        - name: limit
          in: query
          description: Number of orders per page
          required: false
          type: integer
          default: 20
        - name: Api-Key
          in: header
          description: API key for authorization
          required: true
          type: string
        - name: App-Secret
          in: header
          description: APP secret for authorization
          required: true
          type: string
      responses:
        '200':
          description: Order history successfully retrieved
          schema:
            type: object
            properties:
              status:
                description: Success status
                type: boolean
              orders:
                type: array
                items:
                  type: object
                  properties: {}
              page:
                description: Current page number
                type: integer
              pages:
                description: Total number of pages
                type: integer
              total:
                description: Total number of orders
                type: integer
          examples:
            application/json:
              status: true
              orders:
                - order_id: "order-1234"
                  order_date: "2024-07-31T10:00:00Z"
                  amount: 99.99
                  status: "completed"
                - order_id: "order-1235"
                  order_date: "2024-07-30T09:30:00Z"
                  amount: 49.50
                  status: "pending"
              page: 1
              pages: 10
              total: 200
        '500':
          description: Internal server error
          schema:
            type: object
            properties:
              status:
                type: string
              message:
                type: string
      tags:
        - Open APIs
    parameters: []
  /get-order-status-docs:
    get:
      operationId: get-order-status-docs_list
      summary: Get the status of a specific order
      description: >-
        Retrieve the status of an order using the client order ID.


        **Example cURL Command:**


        ```bash

        curl -X GET
        "http://your-api-url/payout/api/get-order-status/{client_order_id}" -H
        "accept: application/json"

        ```
      parameters:
        - name: client_order_id
          in: path
          description: Client order ID
          required: true
          type: string
        - name: Api-Key
          in: header
          description: API key for authorization
          required: true
          type: string
        - name: App-Secret
          in: header
          description: APP secret for authorization
          required: true
          type: string
      responses:
        '200':
          description: Order status successfully retrieved
          schema:
            type: object
            properties:
              status:
                description: Success status
                type: boolean
              order_status:
                description: Order status
                type: string
          examples:
            application/json:
              status: true
              order_status: "completed"
        '500':
          description: Internal server error
          schema:
            type: object
            properties:
              status:
                type: string
              message:
                type: string
      tags:
        - Open APIs
    parameters: []
  /place-payout-order-docs:
    post:
      operationId: place-payout-order-docs_create
      summary: Place a new payout order
      description: >-
        Place a new payout order. 


        **Example cURL Command:**


        ```bash

        curl -X POST "http://your-api-url/payout/api/place-payout-order" \
        -H "accept: application/json" \
        -H "Content-Type: application/json" \
        -d '{
            "full_name": "John Doe",
            "email": "john.doe@example.com",
            "phone_number": "+1234567890",
            "dob": "1990-01-01",
            "address": "Pivot Drive London",
            "itr_status": "Submitted",
            "masked_aadhaar_number": "XXXX-XXXX-1234",
            "pan_number": "ABCDE1234F",
            "account_number": "123456789012",
            "ifsc_code": "IFSC0001234",
            "sell_amount": 1000.00,
            "payout_amount": 950.00,
            "price_feed_guid": "abc123",
            "onramp_order_id": "order123",
            "onramp_customer_id": "customer456",
            "price_offered": 50.00,
            "onramp_fee": 10.00,
            "liquidity_partner_fee": 5.00,
            "network_fee": 2.00,
            "tds_amount": 3.00,
            "payment_gateway_fee": 1.00,
            "aadhaar_kyc_data": {
                "liveliness_check_url": "",
                "aadhaar_document_url": "",
                "aadhaar_verification_timestamp": "",
                "aadhaar_verification_mode": ""
            }
        }'


        ```
      parameters:
        - name: data
          in: body
          required: true
          schema:
            required:
              - full_name
              - email
              - phone_number
              - dob
              - address
              - itr_status
              - masked_aadhaar_number
              - pan_number
              - account_number
              - ifsc_code
              - sell_amount
              - payout_amount
              - price_feed_guid
              - onramp_order_id
              - onramp_customer_id
              - price_offered
              - onramp_fee
              - liquidity_partner_fee
              - network_fee
              - tds_amount
              - payment_gateway_fee
            type: object
            properties:
              full_name:
                description: Full name of the customer
                type: string
              email:
                description: Email address of the customer
                type: string
              phone_number:
                description: Phone number of the customer
                type: string
              dob:
                description: 'Date of birth of the customer (format: YYYY-MM-DD)'
                type: string
              gender:
                description: Gender of the customer (optional)
                type: string
              address:
                description: Address of the customer
                type: string
              itr_status:
                description: ITR status of the customer
                type: boolean
              masked_aadhaar_number:
                description: Masked Aadhaar number of the customer
                type: string
              pan_number:
                description: PAN number of the customer
                type: string
              account_number:
                description: Bank account number of the customer
                type: string
              ifsc_code:
                description: IFSC code of the customer's bank
                type: string
              sell_amount:
                description: Amount to be sold
                type: number
                format: float
              payout_amount:
                description: Amount to be paid out
                type: number
                format: float
              price_feed_guid:
                description: GUID of the associated price feed
                type: string
              onramp_order_id:
                description: Unique order ID from the onramp service
                type: string
              onramp_customer_id:
                description: Unique customer ID from the onramp service
                type: string
              price_offered:
                description: Price offered for the transaction
                type: number
                format: float
              onramp_fee:
                description: Fee charged by the onramp service
                type: number
                format: float
              liquidity_partner_fee:
                description: Fee charged by the liquidity partner
                type: number
                format: float
              network_fee:
                description: Network fee for the transaction
                type: number
                format: float
              tds_amount:
                description: TDS amount for the transaction
                type: number
                format: float
              payment_gateway_fee:
                description: Fee charged by the payment gateway
                type: number
                format: float
        - name: Api-Key
          in: header
          description: API key for authorization
          required: true
          type: string
        - name: App-Secret
          in: header
          description: APP secret for authorization
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              status:
                description: Indicates if the order was successfully placed
                type: boolean
              dp_order_id:
                description: Unique identifier for the placed order
                type: string
        '400':
          description: Bad Request
          schema:
            type: object
            properties:
              status:
                description: Indicates that the request failed
                type: boolean
              message:
                description: Error message describing the reason for failure
                type: string
        '500':
          description: Internal Server Error
          schema:
            type: object
            properties:
              status:
                description: Indicates that the request failed
                type: boolean
              message:
                description: Error message describing the internal server error
                type: string
      tags:
        - Open APIs
    parameters: []
definitions: {}
